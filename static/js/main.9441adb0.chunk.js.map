{"version":3,"sources":["components/Country/Country.js","components/Countries/Countries.js","components/SearchForm/SearchForm.js","App.js","index.js"],"names":["Country","country","name","capital","population","languages","flag","map","lang","key","src","alt","style","width","Countries","countries","SearchForm","state","query","callNewFetchdDebounce","debounce","props","newFetch","trim","changeValue","e","setState","target","value","nextProps","nextState","this","type","onChange","Component","toast","configure","App","notifyToShortenSearch","warn","position","POSITION","BOTTOM_RIGHT","notifyInvalidSearch","length","axios","get","then","response","data","catch","ReactDOM","render","document","getElementById"],"mappings":"wWA4CeA,G,YArCC,SAAC,GAEV,IAAD,IADJC,QAAWC,EACP,EADOA,KAAMC,EACb,EADaA,QAASC,EACtB,EADsBA,WAAYC,EAClC,EADkCA,UAAWC,EAC7C,EAD6CA,KAEjD,OACE,iCACE,4BAAKJ,GACL,uCAAaC,GACb,0CAAgBC,GAEhB,yCACA,4BACGC,EAAUE,KAAI,SAAAC,GAAI,OACjB,wBAAIC,IAAKD,EAAKN,MAAOM,EAAKN,UAI9B,yBAAKQ,IAAKJ,EAAMK,IAAI,OAAOC,MAAO,CAAEC,MAAO,UCAlCC,EAhBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAChB,4BACGA,EAAUR,KAAI,SAAAN,GAAO,OACpB,wBAAIQ,IAAKR,EAAQC,MAAOD,EAAQC,W,iBCkCvBc,E,2MA/BbC,MAAQ,CACNC,MAAO,I,EAGTC,sBAAwBC,KAAS,WAC/B,EAAKC,MAAMC,SAAS,EAAKL,MAAMC,MAAMK,UACpC,K,EAcHC,YAAc,SAAAC,GACZ,EAAKC,SAAS,CAAER,MAAOO,EAAEE,OAAOC,S,qFAbZC,EAAWC,GAG/B,OAFkBC,KAAKd,MAAfC,QAEMY,EAAUZ,Q,2CAMxBa,KAAKZ,0B,+BAOG,IACAD,EAAUa,KAAKd,MAAfC,MAER,OAAO,2BAAOc,KAAK,OAAOJ,MAAOV,EAAOe,SAAUF,KAAKP,kB,GAhClCU,aCIzBC,IAAMC,Y,IA8DSC,E,2MAxDbpB,MAAQ,CACNF,UAAW,I,EAGbuB,sBAAwB,WACtBH,IAAMI,KAAK,qLAAqC,CAC9CC,SAAUL,IAAMM,SAASC,gB,EAI7BC,oBAAsB,WACpBR,IAAMI,KAAK,+LAA0C,CACnDC,SAAUL,IAAMM,SAASC,gB,EAI7BpB,SAAW,SAAAJ,GACJA,EAAM0B,OAMXC,IACGC,IADH,gDACgD5B,IAC7C6B,MAAK,SAAAC,GACJ,GAAIA,EAASC,KAAKL,OAAS,GAIzB,OAHA,EAAKlB,SAAS,CAAEX,UAAW,UAC3B,EAAKuB,wBAKP,EAAKZ,SAAS,CAAEX,UAAWiC,EAASC,UAErCC,OAAM,WACL,EAAKP,sBACL,EAAKjB,SAAS,CAAEX,UAAW,QAnB7B,EAAKW,SAAS,CAAEX,UAAW,M,wEAuBrB,IACAA,EAAcgB,KAAKd,MAAnBF,UAER,OACE,oCACE,kBAAC,EAAD,CAAYO,SAAUS,KAAKT,WAEL,IAArBP,EAAU6B,QAAgB,mDACL,IAArB7B,EAAU6B,QAAgB,kBAAC,EAAD,CAAS3C,QAASc,EAAU,KACtDA,EAAU6B,QAAU,GAAK,kBAAC,EAAD,CAAW7B,UAAWA,S,GAnDtCmB,aCTlBiB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9441adb0.chunk.js","sourcesContent":["/* import - COMPONENT */\r\nimport React from 'react';\r\nimport T from 'prop-types';\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst Country = ({\r\n  country: { name, capital, population, languages, flag },\r\n}) => {\r\n  return (\r\n    <section>\r\n      <h2>{name}</h2>\r\n      <p>Capital: {capital}</p>\r\n      <p>Population: {population}</p>\r\n\r\n      <p>Languages:</p>\r\n      <ul>\r\n        {languages.map(lang => (\r\n          <li key={lang.name}>{lang.name}</li>\r\n        ))}\r\n      </ul>\r\n\r\n      <img src={flag} alt=\"Flag\" style={{ width: 200 }} />\r\n    </section>\r\n  );\r\n};\r\n\r\nCountry.propTypes = {\r\n  country: T.shape({\r\n    name: T.string.isRequired,\r\n    capital: T.string.isRequired,\r\n    population: T.number.isRequired,\r\n\r\n    languages: T.arrayOf(\r\n      T.shape({\r\n        name: T.string.isRequired,\r\n      }),\r\n    ).isRequired,\r\n\r\n    flag: T.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Country;\r\n","/* import - COMPONENT */\r\nimport React from 'react';\r\nimport T from 'prop-types';\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst Countries = ({ countries }) => (\r\n  <ul>\r\n    {countries.map(country => (\r\n      <li key={country.name}>{country.name}</li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nCountries.propTypes = {\r\n  countries: T.arrayOf(\r\n    T.shape({\r\n      name: T.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Countries;\r\n","/* import - node_modules */\r\nimport React, { Component } from 'react';\r\nimport debounce from 'lodash.debounce';\r\nimport T from 'prop-types';\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nclass SearchForm extends Component {\r\n  static propTypes = {\r\n    newFetch: T.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  callNewFetchdDebounce = debounce(() => {\r\n    this.props.newFetch(this.state.query.trim());\r\n  }, 1000);\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    const { query } = this.state;\r\n\r\n    if (query === nextState.query) return false;\r\n\r\n    return true;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.callNewFetchdDebounce();\r\n  }\r\n\r\n  changeValue = e => {\r\n    this.setState({ query: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { query } = this.state;\r\n\r\n    return <input type=\"text\" value={query} onChange={this.changeValue} />;\r\n  }\r\n}\r\n\r\nexport default SearchForm;\r\n","/* import - node_modules */\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n/* import - CSS */\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './App.css';\r\n/* import - COMPONENT */\r\nimport Country from './components/Country/Country';\r\nimport Countries from './components/Countries/Countries';\r\nimport SearchForm from './components/SearchForm/SearchForm';\r\n\r\ntoast.configure();\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nclass App extends Component {\r\n  state = {\r\n    countries: [],\r\n  };\r\n\r\n  notifyToShortenSearch = () => {\r\n    toast.warn('Введите еще для сокращение поиска', {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n    });\r\n  };\r\n\r\n  notifyInvalidSearch = () => {\r\n    toast.warn('Такой страны нету... Попробуйте иначе.', {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n    });\r\n  };\r\n\r\n  newFetch = query => {\r\n    if (!query.length) {\r\n      this.setState({ countries: [] });\r\n\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .get(`https://restcountries.eu/rest/v2/name/${query}`)\r\n      .then(response => {\r\n        if (response.data.length > 10) {\r\n          this.setState({ countries: [] });\r\n          this.notifyToShortenSearch();\r\n\r\n          return;\r\n        }\r\n\r\n        this.setState({ countries: response.data });\r\n      })\r\n      .catch(() => {\r\n        this.notifyInvalidSearch();\r\n        this.setState({ countries: [] });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { countries } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <SearchForm newFetch={this.newFetch} />\r\n\r\n        {countries.length === 0 && <div>Find need country!</div>}\r\n        {countries.length === 1 && <Country country={countries[0]} />}\r\n        {countries.length >= 2 && <Countries countries={countries} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n/* import - CSS */\r\nimport './index.css';\r\n/* import - COMPONENT */\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}